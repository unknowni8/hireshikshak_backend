name: hireshikshak_ci

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=hireshikshak/backend
          docker buildx build \
            --tag $IMAGE_NAME:latest \
            --push .
  
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: create .env file
        run: |
          cat >.env <<'EOF'
          NODE_ENV=${{ vars.NODE_ENV }}
          PORT=${{ vars.PORT }}
          LOG_LEVEL=${{ vars.LOG_LEVEL }}
          EOF
      - name: Docker Login (on server)
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | 
          docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy App
        run: |
          IMAGE_NAME=hireshikshak/backend
          docker pull $IMAGE_NAME:latest
          docker stop backend || true
          docker rm backend || true
          docker run -d \
            --name backend \
            --restart unless-stopped \
            -p 8051:8051 \
            --env-file .env.production \
            $IMAGE_NAME:latest

          echo "Waiting for container to start..."
          sleep 10

          echo "Testing health endpoint..."
          curl -f http://localhost:8051/v1/health || echo "Health check failed"

      - name: Cleanup old images
        run: |
          docker image prune -f